/**
 * Generated by orval v6.27.1 🍺
 * Do not edit manually.
 * OAS 3.1.0 Playground
 */
import { useMutation } from "@tanstack/react-query";
import type {
  MutationFunction,
  UseMutationOptions,
  UseMutationResult,
} from "@tanstack/react-query";
import type {
  Json,
  PostJsonRequiredNullableOptionalParams,
  PostJsonRequiredNullableOptionalPathParameters,
} from "../oAS310Playground.schemas";
import { httpClient } from "../../../httpClient";

export const postJsonRequiredNullableOptional = (
  {
    required,
    nullable,
    optional,
  }: PostJsonRequiredNullableOptionalPathParameters,
  json: Json,
  params: PostJsonRequiredNullableOptionalParams,
) => {
  return httpClient<Json>({
    url: `/json/${required}/${nullable}/${optional}`,
    method: "POST",
    headers: { "Content-Type": "application/json" },
    data: json,
    params,
  });
};

export const getPostJsonRequiredNullableOptionalMutationOptions = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postJsonRequiredNullableOptional>>,
    TError,
    {
      pathParams: PostJsonRequiredNullableOptionalPathParameters;
      data: Json;
      params: PostJsonRequiredNullableOptionalParams;
    },
    TContext
  >;
}): UseMutationOptions<
  Awaited<ReturnType<typeof postJsonRequiredNullableOptional>>,
  TError,
  {
    pathParams: PostJsonRequiredNullableOptionalPathParameters;
    data: Json;
    params: PostJsonRequiredNullableOptionalParams;
  },
  TContext
> => {
  const { mutation: mutationOptions } = options ?? {};

  const mutationFn: MutationFunction<
    Awaited<ReturnType<typeof postJsonRequiredNullableOptional>>,
    {
      pathParams: PostJsonRequiredNullableOptionalPathParameters;
      data: Json;
      params: PostJsonRequiredNullableOptionalParams;
    }
  > = (props) => {
    const { pathParams, data, params } = props ?? {};

    return postJsonRequiredNullableOptional(pathParams, data, params);
  };

  return { mutationFn, ...mutationOptions };
};

export type PostJsonRequiredNullableOptionalMutationResult = NonNullable<
  Awaited<ReturnType<typeof postJsonRequiredNullableOptional>>
>;
export type PostJsonRequiredNullableOptionalMutationBody = Json;
export type PostJsonRequiredNullableOptionalMutationError = unknown;

export const usePostJsonRequiredNullableOptional = <
  TError = unknown,
  TContext = unknown,
>(options?: {
  mutation?: UseMutationOptions<
    Awaited<ReturnType<typeof postJsonRequiredNullableOptional>>,
    TError,
    {
      pathParams: PostJsonRequiredNullableOptionalPathParameters;
      data: Json;
      params: PostJsonRequiredNullableOptionalParams;
    },
    TContext
  >;
}): UseMutationResult<
  Awaited<ReturnType<typeof postJsonRequiredNullableOptional>>,
  TError,
  {
    pathParams: PostJsonRequiredNullableOptionalPathParameters;
    data: Json;
    params: PostJsonRequiredNullableOptionalParams;
  },
  TContext
> => {
  const mutationOptions =
    getPostJsonRequiredNullableOptionalMutationOptions(options);

  return useMutation(mutationOptions);
};
