/**
 * Generated by orval v6.27.1 üç∫
 * Do not edit manually.
 * OAS 3.1.0 Playground
 */
export type PostMultipartFormDataRequiredNullableOptionalParams = {
  required: string;
  nullable: string | null;
  optional?: string;
};

export type PostMultipartFormDataRequiredNullableOptionalPathParameters = {
  required: string;
  nullable: string | null;
  optional?: string;
};
export type PostJsonRequiredNullableOptionalParams = {
  required: string;
  nullable: string | null;
  optional?: string;
};

export type PostJsonRequiredNullableOptionalPathParameters = {
  required: string;
  nullable: string | null;
  optional?: string;
};
export type Enum = (typeof Enum)[keyof typeof Enum];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Enum = {
  Inu: "dog",
  Neko: "cat",
  Tori: "bird",
} as const;

export type NullableBinary = Blob | null;

export type OptionalBinary = Blob;

export type RequiredBinary = Blob;

export type MultipartFormDataObject = {
  key?: string;
};

export type MultipartFormDataNullable = string | null;

export interface MultipartFormData {
  array: string[];
  boolean: boolean;
  date?: Date;
  "date-time"?: Date;
  double: number;
  enum: Enum;
  float: number;
  int32: number;
  int64: number;
  integer: number;
  nullable: MultipartFormDataNullable;
  number: number;
  object: MultipartFormDataObject;
  optional?: string;
  password: string;
  required: string;
}

export type JsonObject = {
  key?: string;
};

export type JsonNullable = string | null;

export interface Json {
  array: string[];
  boolean: boolean;
  date?: Date;
  "date-time"?: Date;
  double: number;
  enum: Enum;
  float: number;
  int32: number;
  int64: number;
  integer: number;
  nullable: JsonNullable;
  number: number;
  object: JsonObject;
  optional?: string;
  password: string;
  required: string;
}
